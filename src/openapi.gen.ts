/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/ping": {
    /**
     * 挙動を確認
     * @description 挙動を確認するためのものです。
     */
    get: operations["ping"];
  };
  "/tasks": {
    /**
     * 例文を取得
     * @description 例文を取得
     */
    get: operations["getTasks"];
  };
  "/me": {
    /** 自身の情報を取得 */
    get: operations["getMe"];
  };
  "/stamps/{fileId}": {
    /** ファイルをダウンロード */
    get: {
      parameters: {
        path: {
          fileId: string;
        };
      };
      responses: {
        /** @description ok */
        200: {
          content: {
            "application/octet-stream": string;
          };
        };
        /** @description Forbidden */
        403: {
          content: never;
        };
        /** @description Not Found */
        404: {
          content: never;
        };
      };
    };
    parameters: {
      path: {
        fileId: string;
      };
    };
  };
  "/rankings": {
    /**
     * ランキングを取得
     * @description ランキングを取得
     */
    get: operations["getRanking"];
    /**
     * ランキングに登録
     * @description ランキングに登録
     */
    post: operations["postRanking"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    ping: {
      /** @example pong */
      message?: string;
    };
    task: {
        /** @example 東京科学大学 */
        content?: string;
        /** @example とうきょうかがくだいがく */
        yomi?: string;
        /** @example https://q.trap.jp/api/v3/public/icon/ramdos */
        iconUri?: string;
        /** @example あんこ🌱 */
        authorDisplayName?: string;
        /** @example 21B */
        grade?: string;
        /** @example anko */
        authorName?: string;
        /**
         * Format: date-time
         * @example 2006/01/02 15:04
         */
        updatedAt?: string;
        /** @example https://q.trap.jp/messages/25e071cd-45fa-4593-99f4-399e29a2c827 */
        citated?: string;
        /** @example https://q.trap.jp/files/b8050d58-17d9-4c84-a910-b670cb3b77bc */
        image?: string;
        stamps?: components["schemas"]["stamp"];
      }[];
    /** MessageStamp */
    stamp: {
        /**
         * Format: uuid
         * @description ユーザーUUID
         */
        stampId?: string;
        /**
         * Format: integer
         * @description スタンプ数
         */
        count?: number;
      }[];
    user: {
      /** @example anko */
      name?: string;
      /** @example https://q.trap.jp/api/v3/public/icon/ramdos */
      iconUri?: string;
    };
    ranking: {
        /** @example 1 */
        rank?: number;
        /** @example kavos */
        userName?: string;
        /** @example 10.5 */
        score?: number;
        /** @example 1 */
        level?: number;
        /**
         * Format: date-time
         * @example 2006/01/02 15:04
         */
        timeStamp?: string;
        /** @example https://q.trap.jp/api/v3/public/icon/ramdos */
        iconUri?: string;
      }[];
    gameResult: {
      /** @example kavos */
      userName?: string;
      /** @example 10.5 */
      score?: number;
      /** @example 1 */
      level?: number;
      /**
       * Format: date-time
       * @example 2006/01/02 15:04
       */
      timeStamp?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * 挙動を確認
   * @description 挙動を確認するためのものです。
   */
  ping: {
    responses: {
      /** @description 成功 */
      200: {
        content: {
          "application/json": components["schemas"]["ping"];
        };
      };
    };
  };
  /**
   * 例文を取得
   * @description 例文を取得
   */
  getTasks: {
    parameters: {
      query: {
        /** @description 難易度 */
        level: number;
        /** @description 件数 */
        count: number;
        /** @description 過激な内容を含むか */
        isSensitive: boolean;
      };
    };
    responses: {
      /** @description 成功 */
      200: {
        content: {
          "application/json": components["schemas"]["task"];
        };
      };
      /** @description 正しくないリクエスト */
      400: {
        content: never;
      };
    };
  };
  /** 自身の情報を取得 */
  getMe: {
    responses: {
      /** @description 成功 */
      200: {
        content: {
          "application/json": components["schemas"]["user"];
        };
      };
      /** @description 正しくないリクエスト */
      400: {
        content: never;
      };
    };
  };
  /**
   * ランキングを取得
   * @description ランキングを取得
   */
  getRanking: {
    parameters: {
      query: {
        /** @description 取得する個数（上位） */
        count: number;
        /** @description 難易度 */
        level: number;
      };
    };
    responses: {
      /** @description 成功 */
      200: {
        content: {
          "application/json": components["schemas"]["ranking"];
        };
      };
      /** @description 正しくないリクエスト */
      400: {
        content: never;
      };
    };
  };
  /**
   * ランキングに登録
   * @description ランキングに登録
   */
  postRanking: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["gameResult"];
      };
    };
    responses: {
      /** @description 成功 */
      204: {
        content: never;
      };
      /** @description 正しくないリクエスト */
      400: {
        content: never;
      };
    };
  };
}
